from collections import Counter

def reverse_string(s):
    return s[::-1]

def is_palindrome(s):
    return s == s[::-1]

def are_anagrams(str1, str2):
    return sorted(str1) == sorted(str2)

def remove_duplicates(lst):
    seen = set()
    result = []
    for item in lst:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result

def flatten_list(nested):
    result = []
    for item in nested:
        if isinstance(item, list):
            result.extend(flatten_list(item))
        else:
            result.append(item)
    return result

def most_frequent(lst):
    count = Counter(lst)
    return count.most_common(1)[0][0] if lst else None

# --- Example usage ---

# Reverse string
s = "hello"
print("Reversed:", reverse_string(s))

# Palindrome check
s2 = "madam"
print("Is Palindrome:", is_palindrome(s2))

# Anagram check
a1, a2 = "listen", "silent"
print("Are Anagrams:", are_anagrams(a1, a2))

# Remove duplicates
dup_list = [1, 2, 2, 3, 1]
print("Without Duplicates:", remove_duplicates(dup_list))

# Flatten nested list
nested = [1, [2, [3, 4], 5], 6]
print("Flattened List:", flatten_list(nested))

# Most frequent element
freq_list = [1, 3, 1, 3, 2, 1]
print("Most Frequent Element:", most_frequent(freq_list))
